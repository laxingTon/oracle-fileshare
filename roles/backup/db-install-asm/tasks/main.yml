---
# tasks file for db-install-asm
- name: Ensure software directory exists
  stat:
    path: /u01/app/oracle/software
  register: software_dir
  become: yes

  #- name: Unzip Oracle DB Infrastructure Software
  #unarchive:
  #  src: /u01/app/oracle/software/LINUX.X64_193000_db_home.zip  # Update with your actual zip file path
  #  dest: /u01/app/19.3.0/db
  #  remote_src: yes
  #  extra_opts: "-q"
  #become_user: oracle
  #become: yes
  
- name: Check if response file exists
  stat:
    path: /u01/app/19.3.0/db/install/response/db_install.rsp
  register: response_file_stat
  become: yes
  become_user: oracle

- name: Create backup if response file exists
  command: cp -prf /u01/app/19.3.0/db/install/response/db_install.rsp /u01/app/19.3.0/db/install/response/db_install.rsp.bkp
  when: response_file_stat.stat.exists
  become: yes
  become_user: oracle

- name: Show message and fail if response file doesn't exist
  fail:
    msg: "Response file does not exist"
  when: not response_file_stat.stat.exists


- name: Modify response file
  block:
    - name: Ensure each field is present in the response file
      lineinfile:
        path: "/u01/app/19.3.0/db/install/response/db_install.rsp"
        line: "{{ item.key }}={{ item.value }}"
        regexp: "^{{ item.key }}="
      loop:
        - { key: "oracle.install.option", value: "INSTALL_DB_SWONLY" }
        - { key: "UNIX_GROUP_NAME", value: "oinstall" }
        - { key: "INVENTORY_LOCATION", value: "/u01/app/oraInventory" }
        - { key: "ORACLE_HOME", value: "/u01/app/19.3.0/db" }
        - { key: "ORACLE_BASE", value: "/u01/app/oracle" }
        - { key: "oracle.install.db.InstallEdition", value: "EE" }
        - { key: "oracle.install.db.OSDBA_GROUP", value: "oinstall" }
        - { key: "oracle.install.db.OSOPER_GROUP", value: "dba" }
        - { key: "oracle.install.db.OSBACKUPDBA_GROUP", value: "oinstall" }
        - { key: "oracle.install.db.OSDGDBA_GROUP", value: "oinstall" }
        - { key: "oracle.install.db.OSKMDBA_GROUP", value: "oinstall" }
        - { key: "oracle.install.db.OSRACDBA_GROUP", value: "oinstall" }
        - { key: "oracle.install.db.rootconfig.executeRootScript", value: "false" }
        - { key: "oracle.install.db.ConfigureAsContainerDB", value: "false" }
        - { key: "oracle.install.db.config.starterdb.memoryOption", value: "false" }
        - { key: "oracle.install.db.config.starterdb.installExampleSchemas", value: "false" }
        - { key: "oracle.install.db.config.starterdb.managementOption", value: "DEFAULT" }
        - { key: "oracle.install.db.config.starterdb.enableRecovery", value: "false" }
      check_mode: no
  become: yes
  become_user: oracle

- name: Execute Prerequisites Check
  shell: "/u01/app/19.3.0/db/runInstaller -executePrereqs -silent -responseFile /u01/app/19.3.0/db/install/response/db_install.rsp"
  args:
    executable: /bin/bash
  become_user: oracle
  become: yes
  ignore_errors: yes

- name: Install Database Software
  shell: "/u01/app/19.3.0/db/runInstaller -silent -responseFile /u01/app/19.3.0/db/install/response/db_install.rsp"
  args:
    executable: /bin/bash
  become_user: oracle
  become: yes
  ignore_errors: yes

- name: Execute root.sh
  shell: "/u01/app/19.3.0/db/root.sh"
  args:
    executable: /bin/bash
  become: yes